---
name: 'Release: Staging'

on:
  workflow_dispatch:
  push:
    branches:
      - docker

jobs:
  queue:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'outdated_runs'
          cancel_others: true
          skip_after_successful_duplicate: true
          paths_ignore: '["**/README.md", "**/docs/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'

  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repository
        uses: actions/checkout@v2

      - name: Setting up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: node_modules-v2-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Installing Node.js packages
        run: npm ci

      - name: Running tests
        run: |
          gulp updateTestResources
          gulp buildPixiFunctions
          gulp lintNode
          gulp lintYaml
          npm run test:platform
          npm run test:playground
          npm run test:pixi
  run:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repository
        uses: actions/checkout@v2

      - name: Setting up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: node_modules-v2-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Installing Node.js packages
        run: npm install

      - name: Building
        env:
          APP_ENV: staging
          AMP_DOC_TOKEN: ${{ secrets.AMP_DOC_TOKEN }}
          AMP_DEV_PIXI_APIS_KEY: ${{ secrets.AMP_DEV_PIXI_APIS_KEY }}
        run: |
          gulp build

      - name: Finalizing build
        run: |
          gulp buildFinalize
          npm run smoke-test -- --colors
        # npm run test:pixi:e2e

      - name: Deploying
        run: |
          gcloud config set app/cloud_build_timeout 1800
          gcloud app deploy --quiet --version=1
